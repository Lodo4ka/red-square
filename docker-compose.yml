services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-app}"]
      interval: 5s
      timeout: 3s
      retries: 10

  migrate:
    build: .
    env_file:
      - ./.env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://app:app@db:5432/app
      JWT_SECRET: ${JWT_SECRET:-red-square-dev-secret}
    depends_on:
      db:
        condition: service_healthy
    command: sh -lc "npx prisma migrate deploy"
    restart: "no"
    volumes:
      - ./prisma/migrations:/app/prisma/migrations

  api-1:
    build: .
    env_file:
      - ./.env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DATABASE_URL: postgresql://app:app@db:5432/app
      JWT_SECRET: ${JWT_SECRET:-red-square-dev-secret}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./prisma/migrations:/app/prisma/migrations:rw

  api-2:
    build: .
    env_file:
      - ./.env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DATABASE_URL: postgresql://app:app@db:5432/app
      JWT_SECRET: ${JWT_SECRET:-red-square-dev-secret}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./prisma/migrations:/app/prisma/migrations:rw

  api-3:
    build: .
    env_file:
      - ./.env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DATABASE_URL: postgresql://app:app@db:5432/app
      JWT_SECRET: ${JWT_SECRET:-red-square-dev-secret}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./prisma/migrations:/app/prisma/migrations:rw

  nginx:
    image: nginx:1.27-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/dist:/usr/share/nginx/html:ro
    depends_on:
      - api-1
      - api-2
      - api-3

volumes:
  db_data:
