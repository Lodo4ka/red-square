// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  survivor
  nikita
}

enum Status {
  active
  finished
  cooldown
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String @unique
  password  String
  role      Role   @default(survivor)
  adminRounds Round[] @relation("RoundAdmin")
  roundPlayers RoundPlayer[]
}

model Round {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  startTime DateTime
  endTime DateTime
  admin User @relation("RoundAdmin", fields: [adminId], references: [id])
  adminId Int
  roundPlayers RoundPlayer[]
  totalScore Int @default(0)
  status Status @default(cooldown)
}

model RoundPlayer {
  id     Int @id @default(autoincrement())
  score  Int @default(0)
  user   User @relation(fields: [userId], references: [id])
  userId Int
  round  Round @relation(fields: [roundId], references: [id])
  roundId Int
  taps Int @default(0)
  @@unique([userId, roundId])
}
